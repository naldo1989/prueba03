<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Registro de votos</title>
  <style>
    body {
      background-color: gray;
      font-family: sans-serif;
      padding: 20px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
      background: white;
    }
    th, td {
      border: 1px solid #222;
      padding: 8px;
      text-align: center;
    }
    th {
      background: #333;
      color: white;
    }
  </style>
</head>
<body>

  <h2>Registro de votos</h2>

  <p><strong>Usuario:</strong> <%= usuario %></p>
  <p><strong>Escuela:</strong> <%= nro_escuela %></p>
  <p><strong>Mesa:</strong> <%= nro_mesa %></p>

  <hr>

  <form id="formRegistro">
    <label>N¬∞ de orden:</label><br>
    <input type="text" id="nro_orden" name="nro_orden" required><br><br>

    <label>Cantidad:</label><br>
    <input type="number" id="cantidad_votos" name="cantidad_votos" required><br><br>

    <button type="submit">Registrar</button>
  </form>

  <p id="mensaje" style="font-weight: bold; margin-top: 10px;"></p>

  <hr>

  <h3>Registros cargados</h3>
  <table id="tablaRegistros">
    <thead>
      <tr>
        <th>#</th>
        <th>N¬∞ Orden</th>
        <th>Cantidad de votos</th>
        <th>Fecha</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <hr>

  <form action="/logout" method="POST">
    <button type="submit" style="background:red; color:white;">Cerrar sesi√≥n</button>
  </form>

  <script>
    // Cargar registros existentes
    async function cargarRegistros() {
      const res = await fetch("/registros");
      const data = await res.json();
      const tbody = document.querySelector("#tablaRegistros tbody");
      tbody.innerHTML = "";

      if (data.length === 0) {
        tbody.innerHTML = "<tr><td colspan='4'>Sin registros a√∫n</td></tr>";
        return;
      }

      data.forEach((r, i) => {
        const fila = `
          <tr>
            <td>${i + 1}</td>
            <td>${r.nro_orden}</td>
            <td>${r.cantidad_votos}</td>
            <td>${new Date(r.fecha_registro).toLocaleString()}</td>
          </tr>`;
        tbody.innerHTML += fila;
      });
    }

    // Env√≠o del formulario
    document.getElementById("formRegistro").addEventListener("submit", async (e) => {
      e.preventDefault();

      const nro_orden = document.getElementById("nro_orden").value;
      const cantidad_votos = document.getElementById("cantidad_votos").value;
      const mensaje = document.getElementById("mensaje");

      try {
        const res = await fetch("/registrar", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ nro_orden, cantidad_votos })
        });

        const data = await res.json();

        if (data.success) {
          mensaje.style.color = "green";
          mensaje.textContent = data.message || "‚úÖ Registro exitoso";
          e.target.reset();
          await cargarRegistros(); // üîÅ recarga la tabla
        } else {
          mensaje.style.color = "red";
          mensaje.textContent = data.message || "‚ùå Error al registrar";
        }

        setTimeout(() => mensaje.textContent = "", 3000);
      } catch (err) {
        console.error(err);
        mensaje.style.color = "red";
        mensaje.textContent = "‚ö†Ô∏è Error al conectar con el servidor.";
      }
    });

    // Carga inicial
    cargarRegistros();
  </script>

</body>
</html>
